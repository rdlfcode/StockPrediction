apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-ingestion
spec:
  replicas: 2
  selector:
    matchLabels:
      app: data-ingestion
  template:
    metadata:
      labels:
        app: data-ingestion
    spec:
      containers:
      - name: data-ingestion
        image: ${IMAGE_REGISTRY}/stock-prediction-platform/data-ingestion:${IMAGE_TAG}
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: url
        - name: TIMESCALEDB_URL
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: timescaledb_url
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: kafka:9092
        - name: REDIS_URL
          value: redis://redis:6379/0
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: model-service
  template:
    metadata:
      labels:
        app: model-service
    spec:
      containers:
      - name: model-service
        image: ${IMAGE_REGISTRY}/stock-prediction-platform/model-service:${IMAGE_TAG}
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: url
        - name: TIMESCALEDB_URL
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: timescaledb_url
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: kafka:9092
        - name: REDIS_URL
          value: redis://redis:6379/0
        - name: MINIO_ENDPOINT
          value: minio:9000
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: access_key
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: secret_key
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dashboard-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: dashboard-service
  template:
    metadata:
      labels:
        app: dashboard-service
    spec:
      containers:
      - name: dashboard-service
        image: ${IMAGE_REGISTRY}/stock-prediction-platform/dashboard-service:${IMAGE_TAG}
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: url
        - name: TIMESCALEDB_URL
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: timescaledb_url
        - name: REDIS_URL
          value: redis://redis:6379/0
        - name: MODEL_SERVICE_URL
          value: http://model-service:8000
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: dashboard-credentials
              key: secret_key
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 5